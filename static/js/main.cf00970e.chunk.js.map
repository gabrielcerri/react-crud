{"version":3,"sources":["components/AddButton.js","components/Table.js","api/users.js","hooks/validate.js","components/Header.js","components/Body.js","components/ProtectedRoute.js","containers/Home/Home.js","components/LoginForm.js","containers/Login/Login.js","App.js","index.js"],"names":["AddButton","text","onClick","className","type","Table","users","removeData","length","map","user","name","email","username","size","icon","faUserMinus","id","fetchData","a","axios","method","url","response","validate","values","errors","test","Header","history","useHistory","push","faHome","faSignOutAlt","Body","React","useState","loading","error","state","setState","useModal","isModalOpen","openModal","closeModal","useEffect","setTimeout","data","e","message","doFetchUsers","formik","useFormik","initialValues","onSubmit","formData","post","newUser","delete","filter","faSpinner","isOpen","transition","ModalTransition","BOTTOM_UP","handleSubmit","htmlFor","onChange","handleChange","onBlur","handleBlur","value","disabled","isValid","dirty","ProtectedRoute","Component","component","rest","render","props","Home","LoginForm","validation","placeholder","password","Login","actions","console","log","setSubmitting","alert","App","setUser","handleLogin","preventDefault","exact","path","toString","handleLogout","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf00970e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AddButton = ({ text, onClick }) => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <button\n        type=\"button\"\n        onClick={onClick}\n        className=\"btn btn-outline-success col-10\"\n      >\n        {\" \"}\n        {text}{\" \"}\n      </button>\n    </div>\n  );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserMinus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../styles/Button.css\";\n\nexport const Table = ({ users, removeData }) => {\n  return (\n    <table className=\"table table-dark table-hover mw-100\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Username</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.length ? (\n          users.map((user) => (\n            <tr key={user.id}>\n              <td> {user.name}</td>\n              <td> {user.email}</td>\n              <td> {user.username}</td>\n              <td className=\"button delete\">\n                <FontAwesomeIcon\n                  size=\"1x\"\n                  icon={faUserMinus}\n                  onClick={() => removeData(user.id)}\n                ></FontAwesomeIcon>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td>AÃºn no hay usuarios registrados</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n","import axios from \"axios\";\n\nexport const fetchData = async () => {\n  try {\n    const response = await axios({\n      method: \"get\",\n      url: \"https://jsonplaceholder.typicode.com/users\",\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n","export const validate = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Required\";\n  } else if (values.name.length > 30) {\n    errors.name = \"Too long! Must be a valid name\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Wrong email addres\";\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (\n    !/^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/i.test(\n      values.username\n    )\n  ) {\n    errors.username = \"Put a valid username\";\n  }\n\n  return errors;\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../styles/Header.css\";\n\nexport const Header = () => {\n  let history = useHistory();\n  return (\n    <div className=\"header-container\">\n      <div\n        className=\"logo\"\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        <FontAwesomeIcon size=\"2x\" icon={faHome}></FontAwesomeIcon>\n      </div>\n      <div className=\"user\">\n        <div className=\"avatar\">\n          <div className=\"icon\">NS</div>\n          <div className=\"username\">Name and Surname</div>\n        </div>\n      </div>\n      <div className=\"logout\">\n        <FontAwesomeIcon size=\"2x\" icon={faSignOutAlt}></FontAwesomeIcon>\n      </div>\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport React from \"react\";\nimport { AddButton, Table, fetchData, validate } from \"./index\";\nimport { ModalProvider } from \"react-simple-hook-modal\";\nimport { Modal, useModal, ModalTransition } from \"react-simple-hook-modal\";\nimport { useFormik } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"react-simple-hook-modal/dist/styles.css\";\nimport \"../styles/Spinner.css\";\nimport \"../styles/Errors.css\";\n\nexport const Body = () => {\n  const [state, setState] = React.useState({\n    loading: false,\n    users: [],\n    error: null,\n  });\n\n  const { loading, users, error } = state;\n\n  const { isModalOpen, openModal, closeModal } = useModal();\n\n  React.useEffect(() => {\n    const doFetchUsers = async () => {\n      setState({ loading: true, users: [], error: null });\n\n      try {\n        setTimeout(async () => {\n          const { data } = await fetchData();\n          setState({ loading: false, users: data, error: null });\n        }, 1500);\n      } catch (e) {\n        setState({ loading: false, users: [], error: e.message });\n      }\n    };\n\n    doFetchUsers();\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n\n      email: \"\",\n\n      username: \"\",\n    },\n    validate,\n    onSubmit: async (formData) => {\n      let newUser = await axios.post(\n        \"https://jsonplaceholder.typicode.com/users\",\n        formData\n      );\n      setState({ users: [...users, newUser.data] });\n      // console.log(newUser.data);\n    },\n  });\n\n  const removeData = async (id) => {\n    await axios.delete(\"http://jsonplaceholder.typicode.com/users/\" + id);\n    setState({ users: [...users].filter((user) => user.id !== id) });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"spinner-container\">\n        <FontAwesomeIcon\n          size=\"6x\"\n          icon={faSpinner}\n          className=\"spinner\"\n        ></FontAwesomeIcon>\n      </div>\n    );\n  } else if (error) {\n    <div className=\"spinner-container\">\n      <h1 className=\"error\">{error}</h1>;\n    </div>;\n  }\n\n  // console.log(formik.errors);\n\n  return (\n    <>\n      <Table users={users} removeData={removeData} />\n      <AddButton onClick={openModal} text=\"Add user\" />\n      <div>\n        <ModalProvider>\n          <Modal\n            id=\"1\"\n            isOpen={isModalOpen}\n            transition={ModalTransition.BOTTOM_UP}\n          >\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Add new user</h5>\n              <button onClick={closeModal} className=\"btn btn-outline-danger\">\n                Close\n              </button>\n            </div>\n\n            <form onSubmit={formik.handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\" className=\"form-label\">\n                  Name\n                </label>\n                <input\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.name}\n                  className=\"form-control\"\n                />\n                {formik.errors.name ? (\n                  <div className=\"errors\">{formik.errors.name}</div>\n                ) : null}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\" className=\"form-label\">\n                  Email\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                  className=\"form-control\"\n                />\n                {formik.errors.email ? (\n                  <div className=\"errors\">{formik.errors.email}</div>\n                ) : null}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"username\" className=\"form-label\">\n                  Username\n                </label>\n                <input\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"username\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.username}\n                  className=\"form-control\"\n                />\n                {formik.errors.username ? (\n                  <div className=\"errors\">{formik.errors.username}</div>\n                ) : null}\n              </div>\n\n              <div className=\"modal-footer\">\n                <button\n                  disabled={!(formik.isValid && formik.dirty)}\n                  type=\"submit\"\n                  className=\"btn btn-success col-12\"\n                  onClick={closeModal}\n                >\n                  Add User\n                </button>\n              </div>\n            </form>\n          </Modal>\n        </ModalProvider>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route {...rest} render={(props) => <Component {...rest} {...props} />} />\n  );\n};\n","import { Header, Body } from \"../../components/index\";\n\nexport const Home = () => {\n  return (\n    <div>\n      <Header />\n      <Body />\n    </div>\n  );\n};\n","import { Field, Form } from \"formik\";\nimport \"../styles/LoginForm.css\";\nimport React from 'react';\n\nconst LoginForm = ({ handleSubmit, errors, validation } ) => {\n\n    return (\n        <div className=\"container d-flex p-2 bd-highlight\">\n            <Form onSubmit={handleSubmit}className=\"form mb-3\">\n                <div className=\"email\">\n                    <label htmlFor=\"email\" className=\"form-label mt-3\">Email</label>\n                    <Field className=\"form-control\" \n                    id=\"email\"\n                    name=\"email\"\n                    validate={validation}\n                    type=\"email\"\n                    placeholder=\"Email\" />\n                    { errors.email && <p className=\"error\">{errors.email}</p> }\n                </div>\n                <div className=\"password\">\n                    <label className=\"form-label mt-3\" htmlFor=\"password\">Password</label>\n                    <Field className=\"form-control\"\n                    id=\"password\" \n                    type=\"password\"\n                    name=\"password\"\n                    validate={validation}\n                    placeholder=\"Password\" />\n                    { errors.password && <p className=\"error\">{errors.password}</p> }\n                </div>\n                <div className=\"text-center mt-3\">\n                    <button className=\"btn btn-info\" type=\"submit\">Log In</button>\n                </div>\n            </Form>                   \n        </div>\n    )\n}\n\nexport default LoginForm\n","import \"./Login.css\";\nimport { Formik } from \"formik\";\nimport LoginForm from \"../../components/LoginForm.js\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Login = () => {\n  const validation = (values) => {\n    let errors = {};\n\n    if (!values.email) {\n      errors.email = \"Please, enter your email adress\";\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n      errors.email = \"Enter a valid email adress\";\n    }\n    if (!values.password) {\n      errors.password = \"Please, enter your password\";\n    } else if (values.password.length < 8) {\n      errors.password = \"Password is too short\";\n    }\n\n    return errors;\n  };\n\n  let history = useHistory();\n  const users = {\n    email: \"frontenditci@gmail.com\",\n    password: \"frontend1234\",\n  };\n\n  return (\n    <div className=\"container d-flex p-2 bd-highlight\">\n      <h1 className=\"header\">Login</h1>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        onSubmit={(values, actions) => {\n          if (\n            values.email === users.email &&\n            values.password === users.password\n          ) {\n            setTimeout(() => {\n              console.log(values);\n              actions.setSubmitting(false);\n              history.push(\"/home\");\n            }, 2000);\n          } else if (\n            values.email !== users.email &&\n            values.password !== users.password\n          ) {\n            setTimeout(() => {\n              actions.setSubmitting(true);\n              alert(\"Wrong username and/or password\");\n            }, 2000);\n          }\n        }}\n        validate={validation}\n      >\n        {(props) => <LoginForm {...props} />}\n      </Formik>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./containers/Home/Home\";\nimport { Login } from \"./containers/Login/Login\";\nimport { ProtectedRoute } from \"./components/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport const App = () => {\n  const [user, setUser] = React.useState(false);\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    setUser(true);\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    setUser(false);\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          handleLogin={handleLogin}\n          render={(props) => (\n            <Login\n              {...props}\n              user={user.toString()}\n              handleLogin={handleLogin}\n            />\n          )}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/home\"\n          handleLogout={handleLogout}\n          component={Home}\n        />\n      </Switch>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { App } from \"./App\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}